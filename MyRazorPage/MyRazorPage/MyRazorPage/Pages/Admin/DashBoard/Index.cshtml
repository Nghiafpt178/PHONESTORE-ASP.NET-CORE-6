@page
@model MyRazorPage.Pages.Admin.DashBoard.IndexModel
@{
}


<div id="content-right">
    <div class="path-admin">DASHBOARD</b></div>
    <div class="content-main">
        <div id="content-main-dashboard">
            <div id="dashboard-1">
                <div id="dashboard-1-container">
                    <div class="dashboard-item">
                        <div class="dashboard-item-title">Weekly Sales</div>
                        <div class="dashboard-item-content">$@Model.WeeklySales</div>
                    </div>
                    <div class="dashboard-item">
                        <div class="dashboard-item-title">Total Orders</div>
                        <div class="dashboard-item-content">@Model.TotalOrder</div>
                    </div>
                    <div class="dashboard-item">
                        <div class="dashboard-item-title">Total Customers</div>
                        <div class="dashboard-item-content">@Model.TotalCustomers</div>
                    </div>
                    <div class="dashboard-item">
                        <div class="dashboard-item-title">Total Guest</div>
                        <div class="dashboard-item-content">@Model.TotalGuest</div>
                    </div>
                </div>
            </div>
            <div id="dashboard-2">
                <div id="chart" style="text-align: center;">
                    <div id="chart1">
                        <h3>Statistic Orders (Month)</h3>
                        <label style="color: red; font-weight:bold; font-size:16px">Filter by year</label>
                       @* <form method="get">*@
                            <select onchange="filterByYear()" id="yearSelect" name="yearFilter">
                                    <option>All Year</option>
                                    @foreach (var item in Model.YearFromDB)
                                    {
                                    <option selected="@(item == Model.YearFilterCurrent)" value="@item">@item</option>
                                    }
                                </select>
                           @* <input type="submit" value="Filter">*@
                        @*</form>*@
                        
                        <canvas id="myChart1" style="width: 100%;"></canvas>
                    </div>
                    <div id="chart2">
                        <canvas id="myChart2" style="width: 80%;"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@{
    int[] arr = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 };
    int[] newCustomer = Model.CustomersStatics;
}
<input type="hidden" value="@JsonSerializer.Serialize(arr)" id="monthSale" />
<input type="hidden" value="@JsonSerializer.Serialize(Model.SumFreightByMonth)" id="totalPriceByMonth" />
<input type="hidden" value="@JsonSerializer.Serialize(Model.TotalCustomers)" id="totalCustomer" />
<input type="hidden" value="@JsonSerializer.Serialize(newCustomer)" id="newCustomer" />

<script>
    function filterByYear() {
        console.log("access");
        var yearFilter = document.getElementById('yearSelect').value;
        console.log(yearFilter);
        window.location = "/admin/dashboard/index?yearFilter=" + yearFilter;
    }
    console.log(document.getElementById('monthSale').value);
    function OrdersChart() {
        var xValues = JSON.parse(document.getElementById("monthSale").value);
        //console.log(xValues);
        new Chart("myChart1", {
            type: "line",
            data: {
                labels: xValues,
                datasets: [{
                    data: JSON.parse(document.getElementById("totalPriceByMonth").value),
                    borderColor: "sienna",
                    fill: true
                }]

            },
            options: {
                legend: { display: false }
            }

        });
    }

    function CustomersChart() {
        var xValues = ["Total", "New customer"];
        var yValues = JSON.parse(document.getElementById("newCustomer").value);
        var barColors = ["green", "red"];

        new Chart("myChart2", {
            type: "bar",
            data: {
                labels: xValues,
                datasets: [{
                    backgroundColor: barColors,
                    data: yValues
                }]
            },
            options: {
                legend: { display: false },
                title: {
                    display: true,
                    text: "New Customers (30 daily Avg)"
                }
            }
        });
    }

    OrdersChart();
    CustomersChart();

</script>
